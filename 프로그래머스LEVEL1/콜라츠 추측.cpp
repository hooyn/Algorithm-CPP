//문제 설명
//1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 
//다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다. 
//작업은 다음과 같습니다.

//1-1. 입력된 수가 짝수라면 2로 나눕니다. 
//1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.
//2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.
//예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 
//되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 
//반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 
//1이 되지 않는다면 –1을 반환해 주세요.

//제한 사항
//입력된 수, num은 1 이상 8000000 미만인 정수입니다.

#include <string>
#include <vector>

using namespace std;

int solution(int num) {
    int answer = 0;
    
    long long temp = num; //num = 626331일 경우 첫번째 과정에서 int범위를
                                  //넘어가기 때문에 long long형 변수를 선언해 주었다.
    while(temp!=1){
        if(temp==1){          //num==1인 경우도 확인
            break;
        }
        if(temp%2==0){
            temp=temp/2;
            answer++;
        }
        else{
            temp=temp*3+1;
            answer++;
        }
        if(answer==500){
            return -1;
        }
    }
    return answer;
}
/*
정확성  테스트
테스트 1 〉	통과 (0.01ms, 3.9MB)
테스트 2 〉	통과 (0.01ms, 3.98MB)
테스트 3 〉	통과 (0.01ms, 3.91MB)
테스트 4 〉	통과 (0.01ms, 3.91MB)
테스트 5 〉	통과 (0.01ms, 3.78MB)
테스트 6 〉	통과 (0.01ms, 3.96MB)
테스트 7 〉	통과 (0.01ms, 3.97MB)
테스트 8 〉	통과 (0.01ms, 3.73MB)
테스트 9 〉	통과 (0.01ms, 3.91MB)
테스트 10 〉통과 (0.01ms, 3.97MB)
테스트 11 〉통과 (0.01ms, 3.9MB)
테스트 12 〉통과 (0.01ms, 3.98MB)
테스트 13 〉통과 (0.01ms, 3.96MB)
테스트 14 〉통과 (0.01ms, 3.79MB)
테스트 15 〉통과 (0.01ms, 3.91MB)
테스트 16 〉통과 (0.01ms, 3.97MB)*/